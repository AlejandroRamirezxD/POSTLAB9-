

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 14 12:52:44 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0012                     _T2CONbits	set	18
   207  0009                     _PORTE	set	9
   208  0008                     _PORTD	set	8
   209  0001                     _TMR0	set	1
   210  000B                     _INTCONbits	set	11
   211  001D                     _CCP2CONbits	set	29
   212  001B                     _CCPR2L	set	27
   213  0017                     _CCP1CONbits	set	23
   214  001E                     _ADRESH	set	30
   215  0015                     _CCPR1L	set	21
   216  001F                     _ADCON0bits	set	31
   217  000C                     _PIR1bits	set	12
   218  008C                     _PIE1bits	set	140
   219  0081                     _OPTION_REGbits	set	129
   220  0092                     _PR2	set	146
   221  0087                     _TRISCbits	set	135
   222  009F                     _ADCON1bits	set	159
   223  008F                     _OSCCONbits	set	143
   224  0088                     _TRISD	set	136
   225  0089                     _TRISE	set	137
   226  0189                     _ANSELH	set	393
   227  0188                     _ANSEL	set	392
   228                           
   229                           	psect	cinit
   230  000F                     start_initialization:	
   231                           ; #config settings
   232                           
   233  000F                     __initialization:
   234                           
   235                           ; Clear objects allocated to COMMON
   236  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   237  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   238  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   239  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   240  0013                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  0013                     __end_of__initialization:
   244  0013  0183               	clrf	3
   245  0014  120A  118A  297B   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMMON
   248  0075                     __pbssCOMMON:
   249  0075                     _msegundos:
   250  0075                     	ds	2
   251  0077                     _val_adreshp:
   252  0077                     	ds	1
   253  0078                     _val_adresh:
   254  0078                     	ds	1
   255                           
   256                           	psect	cstackCOMMON
   257  0070                     __pcstackCOMMON:
   258  0070                     ?_setup:
   259  0070                     ?_isr:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_isr:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_main:	
   266                           ; 1 bytes @ 0x0
   267                           
   268                           
   269                           ; 1 bytes @ 0x0
   270  0070                     	ds	4
   271  0074                     ??_setup:
   272  0074                     ??___awdiv:	
   273                           ; 1 bytes @ 0x4
   274                           
   275                           
   276                           ; 1 bytes @ 0x4
   277  0074                     	ds	1
   278                           
   279                           	psect	cstackBANK0
   280  0020                     __pcstackBANK0:
   281  0020                     ?___awdiv:
   282  0020                     ___awdiv@divisor:	
   283                           ; 2 bytes @ 0x0
   284                           
   285                           
   286                           ; 2 bytes @ 0x0
   287  0020                     	ds	2
   288  0022                     ___awdiv@dividend:
   289                           
   290                           ; 2 bytes @ 0x2
   291  0022                     	ds	2
   292  0024                     ___awdiv@counter:
   293                           
   294                           ; 1 bytes @ 0x4
   295  0024                     	ds	1
   296  0025                     ___awdiv@sign:
   297                           
   298                           ; 1 bytes @ 0x5
   299  0025                     	ds	1
   300  0026                     ___awdiv@quotient:
   301                           
   302                           ; 2 bytes @ 0x6
   303  0026                     	ds	2
   304  0028                     ??_main:
   305                           
   306                           ; 1 bytes @ 0x8
   307  0028                     	ds	3
   308                           
   309                           	psect	maintext
   310  017B                     __pmaintext:	
   311 ;;
   312 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   313 ;;
   314 ;; *************** function _main *****************
   315 ;; Defined at:
   316 ;;		line 108 in file "POSTLAB9.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		wreg, status,2, status,0, pclath, cstack
   325 ;; Tracked objects:
   326 ;;		On entry : B00/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   330 ;;      Params:         0       0       0       0       0
   331 ;;      Locals:         0       0       0       0       0
   332 ;;      Temps:          0       3       0       0       0
   333 ;;      Totals:         0       3       0       0       0
   334 ;;Total ram usage:        3 bytes
   335 ;; Hardware stack levels required when called: 2
   336 ;; This function calls:
   337 ;;		___awdiv
   338 ;;		_setup
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           
   345                           ;psect for function _main
   346  017B                     _main:
   347  017B                     l978:	
   348                           ;incstack = 0
   349                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   350                           
   351                           
   352                           ;POSTLAB9.c: 110:     setup();
   353  017B  120A  118A  211C  120A  118A  	fcall	_setup
   354  0180                     l980:
   355                           
   356                           ;POSTLAB9.c: 111:     ADCON0bits.GO = 1;
   357  0180  1283               	bcf	3,5	;RP0=0, select bank0
   358  0181  1303               	bcf	3,6	;RP1=0, select bank0
   359  0182  149F               	bsf	31,1	;volatile
   360  0183                     l982:
   361                           
   362                           ;POSTLAB9.c: 113:     {;POSTLAB9.c: 114:         if (ADCON0bits.GO == 0){
   363  0183  189F               	btfsc	31,1	;volatile
   364  0184  2986               	goto	u491
   365  0185  2987               	goto	u490
   366  0186                     u491:
   367  0186  29BA               	goto	l1000
   368  0187                     u490:
   369  0187                     l984:
   370                           
   371                           ;POSTLAB9.c: 115:             if(ADCON0bits.CHS == 7)
   372  0187  0C1F               	rrf	31,w	;volatile
   373  0188  00A8               	movwf	??_main
   374  0189  0C28               	rrf	??_main,w
   375  018A  390F               	andlw	15
   376  018B  3A07               	xorlw	7
   377  018C  1D03               	skipz
   378  018D  298F               	goto	u501
   379  018E  2990               	goto	u500
   380  018F                     u501:
   381  018F  2995               	goto	l988
   382  0190                     u500:
   383  0190                     l986:
   384                           
   385                           ;POSTLAB9.c: 116:                 ADCON0bits.CHS = 6;
   386  0190  081F               	movf	31,w	;volatile
   387  0191  39C3               	andlw	-61
   388  0192  3818               	iorlw	24
   389  0193  009F               	movwf	31	;volatile
   390  0194  29B0               	goto	l996
   391  0195                     l988:
   392  0195  0C1F               	rrf	31,w	;volatile
   393  0196  00A8               	movwf	??_main
   394  0197  0C28               	rrf	??_main,w
   395  0198  390F               	andlw	15
   396  0199  3A06               	xorlw	6
   397  019A  1D03               	skipz
   398  019B  299D               	goto	u511
   399  019C  299E               	goto	u510
   400  019D                     u511:
   401  019D  29A3               	goto	l992
   402  019E                     u510:
   403  019E                     l990:
   404                           
   405                           ;POSTLAB9.c: 119:                 ADCON0bits.CHS = 5;
   406  019E  081F               	movf	31,w	;volatile
   407  019F  39C3               	andlw	-61
   408  01A0  3814               	iorlw	20
   409  01A1  009F               	movwf	31	;volatile
   410  01A2  29B0               	goto	l996
   411  01A3                     l992:
   412  01A3  0C1F               	rrf	31,w	;volatile
   413  01A4  00A8               	movwf	??_main
   414  01A5  0C28               	rrf	??_main,w
   415  01A6  390F               	andlw	15
   416  01A7  3A05               	xorlw	5
   417  01A8  1D03               	skipz
   418  01A9  29AB               	goto	u521
   419  01AA  29AC               	goto	u520
   420  01AB                     u521:
   421  01AB  29B0               	goto	l996
   422  01AC                     u520:
   423  01AC                     l994:
   424                           
   425                           ;POSTLAB9.c: 122:                 ADCON0bits.CHS = 7;
   426  01AC  081F               	movf	31,w	;volatile
   427  01AD  39C3               	andlw	-61
   428  01AE  381C               	iorlw	28
   429  01AF  009F               	movwf	31	;volatile
   430  01B0                     l996:
   431                           
   432                           ;POSTLAB9.c: 124:             _delay((unsigned long)((50)*(8000000/4000000.0)));
   433  01B0  3020               	movlw	32
   434  01B1  1283               	bcf	3,5	;RP0=0, select bank0
   435  01B2  1303               	bcf	3,6	;RP1=0, select bank0
   436  01B3  00A8               	movwf	??_main
   437  01B4                     u537:
   438  01B4  0BA8               	decfsz	??_main,f
   439  01B5  29B4               	goto	u537
   440  01B6  0000               	nop
   441  01B7                     l998:
   442                           
   443                           ;POSTLAB9.c: 125:             ADCON0bits.GO = 1;
   444  01B7  1283               	bcf	3,5	;RP0=0, select bank0
   445  01B8  1303               	bcf	3,6	;RP1=0, select bank0
   446  01B9  149F               	bsf	31,1	;volatile
   447  01BA                     l1000:
   448                           
   449                           ;POSTLAB9.c: 127:         val_adreshp = (int)val_adresh/10;
   450  01BA  300A               	movlw	10
   451  01BB  00A0               	movwf	___awdiv@divisor
   452  01BC  3000               	movlw	0
   453  01BD  00A1               	movwf	___awdiv@divisor+1
   454  01BE  0878               	movf	_val_adresh,w
   455  01BF  00A8               	movwf	??_main
   456  01C0  01A9               	clrf	??_main+1
   457  01C1  0828               	movf	??_main,w
   458  01C2  00A2               	movwf	___awdiv@dividend
   459  01C3  0829               	movf	??_main+1,w
   460  01C4  00A3               	movwf	___awdiv@dividend+1
   461  01C5  120A  118A  20B3  120A  118A  	fcall	___awdiv
   462  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   463  01CB  1303               	bcf	3,6	;RP1=0, select bank0
   464  01CC  0820               	movf	?___awdiv,w
   465  01CD  00AA               	movwf	??_main+2
   466  01CE  082A               	movf	??_main+2,w
   467  01CF  00F7               	movwf	_val_adreshp
   468  01D0  2983               	goto	l982
   469  01D1  120A  118A  280C   	ljmp	start
   470  01D4                     __end_of_main:
   471                           
   472                           	psect	text1
   473  011C                     __ptext1:	
   474 ;; *************** function _setup *****************
   475 ;; Defined at:
   476 ;;		line 136 in file "POSTLAB9.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          1       0       0       0       0
   493 ;;      Totals:         1       0       0       0       0
   494 ;;Total ram usage:        1 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; Hardware stack levels required when called: 1
   497 ;; This function calls:
   498 ;;		Nothing
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           
   505                           ;psect for function _setup
   506  011C                     _setup:
   507  011C                     l682:	
   508                           ;incstack = 0
   509                           ; Regs used in _setup: [wreg+status,2+status,0]
   510                           
   511                           
   512                           ;POSTLAB9.c: 139:     ANSEL = 0b11100000;
   513  011C  30E0               	movlw	224
   514  011D  1683               	bsf	3,5	;RP0=1, select bank3
   515  011E  1703               	bsf	3,6	;RP1=1, select bank3
   516  011F  0088               	movwf	8	;volatile
   517  0120                     l684:
   518                           
   519                           ;POSTLAB9.c: 140:     ANSELH = 0;
   520  0120  0189               	clrf	9	;volatile
   521  0121                     l686:
   522                           
   523                           ;POSTLAB9.c: 142:     TRISE = 0b111;
   524  0121  3007               	movlw	7
   525  0122  1683               	bsf	3,5	;RP0=1, select bank1
   526  0123  1303               	bcf	3,6	;RP1=0, select bank1
   527  0124  0089               	movwf	9	;volatile
   528                           
   529                           ;POSTLAB9.c: 143:     TRISD = 0;
   530  0125  0188               	clrf	8	;volatile
   531                           
   532                           ;POSTLAB9.c: 144:     PORTE = 0;
   533  0126  1283               	bcf	3,5	;RP0=0, select bank0
   534  0127  1303               	bcf	3,6	;RP1=0, select bank0
   535  0128  0189               	clrf	9	;volatile
   536                           
   537                           ;POSTLAB9.c: 145:     PORTD = 0;
   538  0129  0188               	clrf	8	;volatile
   539  012A                     l688:
   540                           
   541                           ;POSTLAB9.c: 148:     OSCCONbits.IRCF = 0b0111;
   542  012A  3070               	movlw	112
   543  012B  1683               	bsf	3,5	;RP0=1, select bank1
   544  012C  1303               	bcf	3,6	;RP1=0, select bank1
   545  012D  048F               	iorwf	15,f	;volatile
   546  012E                     l690:
   547                           
   548                           ;POSTLAB9.c: 149:     OSCCONbits.SCS = 1;
   549  012E  140F               	bsf	15,0	;volatile
   550  012F                     l692:
   551                           
   552                           ;POSTLAB9.c: 152:     ADCON1bits.ADFM = 0;
   553  012F  139F               	bcf	31,7	;volatile
   554  0130                     l694:
   555                           
   556                           ;POSTLAB9.c: 153:     ADCON1bits.VCFG1 = 0;
   557  0130  129F               	bcf	31,5	;volatile
   558  0131                     l696:
   559                           
   560                           ;POSTLAB9.c: 154:     ADCON1bits.VCFG0 = 0;
   561  0131  121F               	bcf	31,4	;volatile
   562  0132                     l698:
   563                           
   564                           ;POSTLAB9.c: 156:     ADCON0bits.ADCS = 0b01;
   565  0132  1283               	bcf	3,5	;RP0=0, select bank0
   566  0133  1303               	bcf	3,6	;RP1=0, select bank0
   567  0134  081F               	movf	31,w	;volatile
   568  0135  393F               	andlw	-193
   569  0136  3840               	iorlw	64
   570  0137  009F               	movwf	31	;volatile
   571  0138                     l700:
   572                           
   573                           ;POSTLAB9.c: 157:     ADCON0bits.CHS = 5;
   574  0138  081F               	movf	31,w	;volatile
   575  0139  39C3               	andlw	-61
   576  013A  3814               	iorlw	20
   577  013B  009F               	movwf	31	;volatile
   578  013C                     l702:
   579                           
   580                           ;POSTLAB9.c: 158:     ADCON0bits.ADON = 1;
   581  013C  141F               	bsf	31,0	;volatile
   582  013D                     l704:
   583                           
   584                           ;POSTLAB9.c: 159:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   585  013D  3021               	movlw	33
   586  013E  00F4               	movwf	??_setup
   587  013F                     u547:
   588  013F  0BF4               	decfsz	??_setup,f
   589  0140  293F               	goto	u547
   590  0141                     l706:
   591                           
   592                           ;POSTLAB9.c: 162:     TRISCbits.TRISC2 = 1;
   593  0141  1683               	bsf	3,5	;RP0=1, select bank1
   594  0142  1303               	bcf	3,6	;RP1=0, select bank1
   595  0143  1507               	bsf	7,2	;volatile
   596  0144                     l708:
   597                           
   598                           ;POSTLAB9.c: 163:     TRISCbits.TRISC1 = 1;
   599  0144  1487               	bsf	7,1	;volatile
   600  0145                     l710:
   601                           
   602                           ;POSTLAB9.c: 164:     PR2 = 249;
   603  0145  30F9               	movlw	249
   604  0146  0092               	movwf	18	;volatile
   605  0147                     l712:
   606                           
   607                           ;POSTLAB9.c: 167:     CCP1CONbits.P1M = 0;
   608  0147  303F               	movlw	-193
   609  0148  1283               	bcf	3,5	;RP0=0, select bank0
   610  0149  1303               	bcf	3,6	;RP1=0, select bank0
   611  014A  0597               	andwf	23,f	;volatile
   612  014B                     l714:
   613                           
   614                           ;POSTLAB9.c: 168:     CCP1CONbits.CCP1M = 0b1100;
   615  014B  0817               	movf	23,w	;volatile
   616  014C  39F0               	andlw	-16
   617  014D  380C               	iorlw	12
   618  014E  0097               	movwf	23	;volatile
   619  014F                     l716:
   620                           
   621                           ;POSTLAB9.c: 169:     CCPR1L = 0x0f;
   622  014F  300F               	movlw	15
   623  0150  0095               	movwf	21	;volatile
   624  0151                     l718:
   625                           
   626                           ;POSTLAB9.c: 170:     CCP1CONbits.DC1B = 0;
   627  0151  30CF               	movlw	-49
   628  0152  0597               	andwf	23,f	;volatile
   629  0153                     l720:
   630                           
   631                           ;POSTLAB9.c: 173:     CCPR2L = 0x0f;
   632  0153  300F               	movlw	15
   633  0154  009B               	movwf	27	;volatile
   634  0155                     l722:
   635                           
   636                           ;POSTLAB9.c: 174:     CCP2CONbits.CCP2M = 0b1100;
   637  0155  081D               	movf	29,w	;volatile
   638  0156  39F0               	andlw	-16
   639  0157  380C               	iorlw	12
   640  0158  009D               	movwf	29	;volatile
   641  0159                     l724:
   642                           
   643                           ;POSTLAB9.c: 175:     CCP2CONbits.DC2B0 = 0;
   644  0159  121D               	bcf	29,4	;volatile
   645  015A                     l726:
   646                           
   647                           ;POSTLAB9.c: 176:     CCP2CONbits.DC2B1 = 0;
   648  015A  129D               	bcf	29,5	;volatile
   649  015B                     l728:
   650                           
   651                           ;POSTLAB9.c: 179:     PIR1bits.TMR2IF = 0;
   652  015B  108C               	bcf	12,1	;volatile
   653  015C                     l730:
   654                           
   655                           ;POSTLAB9.c: 180:     T2CONbits.T2CKPS = 0b11;
   656  015C  3003               	movlw	3
   657  015D  0492               	iorwf	18,f	;volatile
   658  015E                     l732:
   659                           
   660                           ;POSTLAB9.c: 181:     T2CONbits.TMR2ON = 1;
   661  015E  1512               	bsf	18,2	;volatile
   662  015F                     l87:	
   663                           ;POSTLAB9.c: 182:     while (PIR1bits.TMR2IF == 0);
   664                           
   665  015F  1C8C               	btfss	12,1	;volatile
   666  0160  2962               	goto	u11
   667  0161  2963               	goto	u10
   668  0162                     u11:
   669  0162  295F               	goto	l87
   670  0163                     u10:
   671  0163                     l734:
   672                           
   673                           ;POSTLAB9.c: 183:     PIR1bits.TMR2IF == 0;
   674  0163  080C               	movf	12,w	;volatile
   675  0164                     l736:
   676                           
   677                           ;POSTLAB9.c: 186:     TRISCbits.TRISC2 = 0;
   678  0164  1683               	bsf	3,5	;RP0=1, select bank1
   679  0165  1303               	bcf	3,6	;RP1=0, select bank1
   680  0166  1107               	bcf	7,2	;volatile
   681  0167                     l738:
   682                           
   683                           ;POSTLAB9.c: 187:     TRISCbits.TRISC1 = 0;
   684  0167  1087               	bcf	7,1	;volatile
   685  0168                     l740:
   686                           
   687                           ;POSTLAB9.c: 191:     OPTION_REGbits.T0CS = 0;
   688  0168  1281               	bcf	1,5	;volatile
   689  0169                     l742:
   690                           
   691                           ;POSTLAB9.c: 192:     OPTION_REGbits.T0SE = 0;
   692  0169  1201               	bcf	1,4	;volatile
   693  016A                     l744:
   694                           
   695                           ;POSTLAB9.c: 193:     OPTION_REGbits.PSA = 1;
   696  016A  1581               	bsf	1,3	;volatile
   697  016B                     l746:
   698                           
   699                           ;POSTLAB9.c: 194:     OPTION_REGbits.PS2 = 0;
   700  016B  1101               	bcf	1,2	;volatile
   701  016C                     l748:
   702                           
   703                           ;POSTLAB9.c: 195:     OPTION_REGbits.PS1 = 0;
   704  016C  1081               	bcf	1,1	;volatile
   705  016D                     l750:
   706                           
   707                           ;POSTLAB9.c: 196:     OPTION_REGbits.PS0 = 0;
   708  016D  1001               	bcf	1,0	;volatile
   709                           
   710                           ;POSTLAB9.c: 197:     TMR0 = 56;
   711  016E  3038               	movlw	56
   712  016F  1283               	bcf	3,5	;RP0=0, select bank0
   713  0170  1303               	bcf	3,6	;RP1=0, select bank0
   714  0171  0081               	movwf	1	;volatile
   715  0172                     l752:
   716                           
   717                           ;POSTLAB9.c: 200:     PIR1bits.ADIF = 0;
   718  0172  130C               	bcf	12,6	;volatile
   719  0173                     l754:
   720                           
   721                           ;POSTLAB9.c: 201:     PIE1bits.ADIE = 1;
   722  0173  1683               	bsf	3,5	;RP0=1, select bank1
   723  0174  1303               	bcf	3,6	;RP1=0, select bank1
   724  0175  170C               	bsf	12,6	;volatile
   725  0176                     l756:
   726                           
   727                           ;POSTLAB9.c: 202:     INTCONbits.PEIE = 1;
   728  0176  170B               	bsf	11,6	;volatile
   729  0177                     l758:
   730                           
   731                           ;POSTLAB9.c: 203:     INTCONbits.GIE = 1;
   732  0177  178B               	bsf	11,7	;volatile
   733  0178                     l760:
   734                           
   735                           ;POSTLAB9.c: 204:     INTCONbits.T0IE = 1;
   736  0178  168B               	bsf	11,5	;volatile
   737  0179                     l762:
   738                           
   739                           ;POSTLAB9.c: 205:     INTCONbits.TMR0IF = 0;
   740  0179  110B               	bcf	11,2	;volatile
   741  017A                     l90:
   742  017A  0008               	return
   743  017B                     __end_of_setup:
   744                           
   745                           	psect	text2
   746  00B3                     __ptext2:	
   747 ;; *************** function ___awdiv *****************
   748 ;; Defined at:
   749 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  divisor         2    0[BANK0 ] int 
   752 ;;  dividend        2    2[BANK0 ] int 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  quotient        2    6[BANK0 ] int 
   755 ;;  sign            1    5[BANK0 ] unsigned char 
   756 ;;  counter         1    4[BANK0 ] unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  2    0[BANK0 ] int 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       4       0       0       0
   767 ;;      Locals:         0       4       0       0       0
   768 ;;      Temps:          1       0       0       0       0
   769 ;;      Totals:         1       8       0       0       0
   770 ;;Total ram usage:        9 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function ___awdiv
   782  00B3                     ___awdiv:
   783  00B3                     l934:	
   784                           ;incstack = 0
   785                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   786                           
   787  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   788  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   789  00B5  01A5               	clrf	___awdiv@sign
   790  00B6                     l936:
   791  00B6  1FA1               	btfss	___awdiv@divisor+1,7
   792  00B7  28B9               	goto	u391
   793  00B8  28BA               	goto	u390
   794  00B9                     u391:
   795  00B9  28C1               	goto	l942
   796  00BA                     u390:
   797  00BA                     l938:
   798  00BA  09A0               	comf	___awdiv@divisor,f
   799  00BB  09A1               	comf	___awdiv@divisor+1,f
   800  00BC  0AA0               	incf	___awdiv@divisor,f
   801  00BD  1903               	skipnz
   802  00BE  0AA1               	incf	___awdiv@divisor+1,f
   803  00BF                     l940:
   804  00BF  01A5               	clrf	___awdiv@sign
   805  00C0  0AA5               	incf	___awdiv@sign,f
   806  00C1                     l942:
   807  00C1  1FA3               	btfss	___awdiv@dividend+1,7
   808  00C2  28C4               	goto	u401
   809  00C3  28C5               	goto	u400
   810  00C4                     u401:
   811  00C4  28CE               	goto	l948
   812  00C5                     u400:
   813  00C5                     l944:
   814  00C5  09A2               	comf	___awdiv@dividend,f
   815  00C6  09A3               	comf	___awdiv@dividend+1,f
   816  00C7  0AA2               	incf	___awdiv@dividend,f
   817  00C8  1903               	skipnz
   818  00C9  0AA3               	incf	___awdiv@dividend+1,f
   819  00CA                     l946:
   820  00CA  3001               	movlw	1
   821  00CB  00F4               	movwf	??___awdiv
   822  00CC  0874               	movf	??___awdiv,w
   823  00CD  06A5               	xorwf	___awdiv@sign,f
   824  00CE                     l948:
   825  00CE  01A6               	clrf	___awdiv@quotient
   826  00CF  01A7               	clrf	___awdiv@quotient+1
   827  00D0                     l950:
   828  00D0  0820               	movf	___awdiv@divisor,w
   829  00D1  0421               	iorwf	___awdiv@divisor+1,w
   830  00D2  1903               	btfsc	3,2
   831  00D3  28D5               	goto	u411
   832  00D4  28D6               	goto	u410
   833  00D5                     u411:
   834  00D5  290D               	goto	l970
   835  00D6                     u410:
   836  00D6                     l952:
   837  00D6  01A4               	clrf	___awdiv@counter
   838  00D7  0AA4               	incf	___awdiv@counter,f
   839  00D8  28E4               	goto	l958
   840  00D9                     l954:
   841  00D9  3001               	movlw	1
   842  00DA                     u425:
   843  00DA  1003               	clrc
   844  00DB  0DA0               	rlf	___awdiv@divisor,f
   845  00DC  0DA1               	rlf	___awdiv@divisor+1,f
   846  00DD  3EFF               	addlw	-1
   847  00DE  1D03               	skipz
   848  00DF  28DA               	goto	u425
   849  00E0                     l956:
   850  00E0  3001               	movlw	1
   851  00E1  00F4               	movwf	??___awdiv
   852  00E2  0874               	movf	??___awdiv,w
   853  00E3  07A4               	addwf	___awdiv@counter,f
   854  00E4                     l958:
   855  00E4  1FA1               	btfss	___awdiv@divisor+1,7
   856  00E5  28E7               	goto	u431
   857  00E6  28E8               	goto	u430
   858  00E7                     u431:
   859  00E7  28D9               	goto	l954
   860  00E8                     u430:
   861  00E8                     l960:
   862  00E8  3001               	movlw	1
   863  00E9                     u445:
   864  00E9  1003               	clrc
   865  00EA  0DA6               	rlf	___awdiv@quotient,f
   866  00EB  0DA7               	rlf	___awdiv@quotient+1,f
   867  00EC  3EFF               	addlw	-1
   868  00ED  1D03               	skipz
   869  00EE  28E9               	goto	u445
   870  00EF  0821               	movf	___awdiv@divisor+1,w
   871  00F0  0223               	subwf	___awdiv@dividend+1,w
   872  00F1  1D03               	skipz
   873  00F2  28F5               	goto	u455
   874  00F3  0820               	movf	___awdiv@divisor,w
   875  00F4  0222               	subwf	___awdiv@dividend,w
   876  00F5                     u455:
   877  00F5  1C03               	skipc
   878  00F6  28F8               	goto	u451
   879  00F7  28F9               	goto	u450
   880  00F8                     u451:
   881  00F8  2900               	goto	l966
   882  00F9                     u450:
   883  00F9                     l962:
   884  00F9  0820               	movf	___awdiv@divisor,w
   885  00FA  02A2               	subwf	___awdiv@dividend,f
   886  00FB  0821               	movf	___awdiv@divisor+1,w
   887  00FC  1C03               	skipc
   888  00FD  03A3               	decf	___awdiv@dividend+1,f
   889  00FE  02A3               	subwf	___awdiv@dividend+1,f
   890  00FF                     l964:
   891  00FF  1426               	bsf	___awdiv@quotient,0
   892  0100                     l966:
   893  0100  3001               	movlw	1
   894  0101                     u465:
   895  0101  1003               	clrc
   896  0102  0CA1               	rrf	___awdiv@divisor+1,f
   897  0103  0CA0               	rrf	___awdiv@divisor,f
   898  0104  3EFF               	addlw	-1
   899  0105  1D03               	skipz
   900  0106  2901               	goto	u465
   901  0107                     l968:
   902  0107  3001               	movlw	1
   903  0108  02A4               	subwf	___awdiv@counter,f
   904  0109  1D03               	btfss	3,2
   905  010A  290C               	goto	u471
   906  010B  290D               	goto	u470
   907  010C                     u471:
   908  010C  28E8               	goto	l960
   909  010D                     u470:
   910  010D                     l970:
   911  010D  0825               	movf	___awdiv@sign,w
   912  010E  1903               	btfsc	3,2
   913  010F  2911               	goto	u481
   914  0110  2912               	goto	u480
   915  0111                     u481:
   916  0111  2917               	goto	l974
   917  0112                     u480:
   918  0112                     l972:
   919  0112  09A6               	comf	___awdiv@quotient,f
   920  0113  09A7               	comf	___awdiv@quotient+1,f
   921  0114  0AA6               	incf	___awdiv@quotient,f
   922  0115  1903               	skipnz
   923  0116  0AA7               	incf	___awdiv@quotient+1,f
   924  0117                     l974:
   925  0117  0827               	movf	___awdiv@quotient+1,w
   926  0118  00A1               	movwf	?___awdiv+1
   927  0119  0826               	movf	___awdiv@quotient,w
   928  011A  00A0               	movwf	?___awdiv
   929  011B                     l329:
   930  011B  0008               	return
   931  011C                     __end_of___awdiv:
   932                           
   933                           	psect	text3
   934  0017                     __ptext3:	
   935 ;; *************** function _isr *****************
   936 ;; Defined at:
   937 ;;		line 52 in file "POSTLAB9.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   951 ;;      Params:         0       0       0       0       0
   952 ;;      Locals:         0       0       0       0       0
   953 ;;      Temps:          4       0       0       0       0
   954 ;;      Totals:         4       0       0       0       0
   955 ;;Total ram usage:        4 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		Interrupt level 1
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           
   965                           ;psect for function _isr
   966  0017                     _isr:
   967  0017                     i1l810:
   968                           
   969                           ;POSTLAB9.c: 54:      if(PIR1bits.ADIF)
   970  0017  1283               	bcf	3,5	;RP0=0, select bank0
   971  0018  1303               	bcf	3,6	;RP1=0, select bank0
   972  0019  1F0C               	btfss	12,6	;volatile
   973  001A  281C               	goto	u12_21
   974  001B  281D               	goto	u12_20
   975  001C                     u12_21:
   976  001C  287F               	goto	i1l59
   977  001D                     u12_20:
   978  001D                     i1l812:
   979                           
   980                           ;POSTLAB9.c: 55:     {;POSTLAB9.c: 57:          if(ADCON0bits.CHS == 6)
   981  001D  0C1F               	rrf	31,w	;volatile
   982  001E  00F0               	movwf	??_isr
   983  001F  0C70               	rrf	??_isr,w
   984  0020  390F               	andlw	15
   985  0021  3A06               	xorlw	6
   986  0022  1D03               	skipz
   987  0023  2825               	goto	u13_21
   988  0024  2826               	goto	u13_20
   989  0025                     u13_21:
   990  0025  2847               	goto	i1l816
   991  0026                     u13_20:
   992  0026                     i1l814:
   993                           
   994                           ;POSTLAB9.c: 58:          {;POSTLAB9.c: 59:              CCPR1L = (ADRESH>>1)+124;
   995  0026  081E               	movf	30,w	;volatile
   996  0027  00F0               	movwf	??_isr
   997  0028  1003               	clrc
   998  0029  0C70               	rrf	??_isr,w
   999  002A  3E7C               	addlw	124
  1000  002B  0095               	movwf	21	;volatile
  1001                           
  1002                           ;POSTLAB9.c: 60:              CCP1CONbits.DC1B1 = ADRESH & 0b01;
  1003  002C  081E               	movf	30,w	;volatile
  1004  002D  3901               	andlw	1
  1005  002E  00F0               	movwf	??_isr
  1006  002F  0EF0               	swapf	??_isr,f
  1007  0030  0DF0               	rlf	??_isr,f
  1008  0031  0817               	movf	23,w	;volatile
  1009  0032  0670               	xorwf	??_isr,w
  1010  0033  39DF               	andlw	-33
  1011  0034  0670               	xorwf	??_isr,w
  1012  0035  0097               	movwf	23	;volatile
  1013                           
  1014                           ;POSTLAB9.c: 61:              CCP1CONbits.DC1B0 = (ADRESH >> 7);
  1015  0036  081E               	movf	30,w	;volatile
  1016  0037  00F0               	movwf	??_isr
  1017  0038  3007               	movlw	7
  1018  0039                     u14_25:
  1019  0039  1003               	clrc
  1020  003A  0CF0               	rrf	??_isr,f
  1021  003B  3EFF               	addlw	-1
  1022  003C  1D03               	skipz
  1023  003D  2839               	goto	u14_25
  1024  003E  0870               	movf	??_isr,w
  1025  003F  00F1               	movwf	??_isr+1
  1026  0040  0EF1               	swapf	??_isr+1,f
  1027  0041  0817               	movf	23,w	;volatile
  1028  0042  0671               	xorwf	??_isr+1,w
  1029  0043  39EF               	andlw	-17
  1030  0044  0671               	xorwf	??_isr+1,w
  1031  0045  0097               	movwf	23	;volatile
  1032                           
  1033                           ;POSTLAB9.c: 62:          }
  1034  0046  287D               	goto	i1l824
  1035  0047                     i1l816:
  1036  0047  0C1F               	rrf	31,w	;volatile
  1037  0048  00F0               	movwf	??_isr
  1038  0049  0C70               	rrf	??_isr,w
  1039  004A  390F               	andlw	15
  1040  004B  3A05               	xorlw	5
  1041  004C  1D03               	skipz
  1042  004D  284F               	goto	u15_21
  1043  004E  2850               	goto	u15_20
  1044  004F                     u15_21:
  1045  004F  2870               	goto	i1l820
  1046  0050                     u15_20:
  1047  0050                     i1l818:
  1048                           
  1049                           ;POSTLAB9.c: 64:          {;POSTLAB9.c: 65:              CCPR2L = (ADRESH>>1)+124;
  1050  0050  081E               	movf	30,w	;volatile
  1051  0051  00F0               	movwf	??_isr
  1052  0052  1003               	clrc
  1053  0053  0C70               	rrf	??_isr,w
  1054  0054  3E7C               	addlw	124
  1055  0055  009B               	movwf	27	;volatile
  1056                           
  1057                           ;POSTLAB9.c: 66:              CCP2CONbits.DC2B0 = ADRESH & 0b01;
  1058  0056  081E               	movf	30,w	;volatile
  1059  0057  3901               	andlw	1
  1060  0058  00F0               	movwf	??_isr
  1061  0059  0EF0               	swapf	??_isr,f
  1062  005A  081D               	movf	29,w	;volatile
  1063  005B  0670               	xorwf	??_isr,w
  1064  005C  39EF               	andlw	-17
  1065  005D  0670               	xorwf	??_isr,w
  1066  005E  009D               	movwf	29	;volatile
  1067                           
  1068                           ;POSTLAB9.c: 67:              CCP2CONbits.DC2B0 = (ADRESH >> 7);
  1069  005F  081E               	movf	30,w	;volatile
  1070  0060  00F0               	movwf	??_isr
  1071  0061  3007               	movlw	7
  1072  0062                     u16_25:
  1073  0062  1003               	clrc
  1074  0063  0CF0               	rrf	??_isr,f
  1075  0064  3EFF               	addlw	-1
  1076  0065  1D03               	skipz
  1077  0066  2862               	goto	u16_25
  1078  0067  0870               	movf	??_isr,w
  1079  0068  00F1               	movwf	??_isr+1
  1080  0069  0EF1               	swapf	??_isr+1,f
  1081  006A  081D               	movf	29,w	;volatile
  1082  006B  0671               	xorwf	??_isr+1,w
  1083  006C  39EF               	andlw	-17
  1084  006D  0671               	xorwf	??_isr+1,w
  1085  006E  009D               	movwf	29	;volatile
  1086                           
  1087                           ;POSTLAB9.c: 68:          }
  1088  006F  287D               	goto	i1l824
  1089  0070                     i1l820:
  1090  0070  0C1F               	rrf	31,w	;volatile
  1091  0071  00F0               	movwf	??_isr
  1092  0072  0C70               	rrf	??_isr,w
  1093  0073  390F               	andlw	15
  1094  0074  3A07               	xorlw	7
  1095  0075  1D03               	skipz
  1096  0076  2878               	goto	u17_21
  1097  0077  2879               	goto	u17_20
  1098  0078                     u17_21:
  1099  0078  287D               	goto	i1l824
  1100  0079                     u17_20:
  1101  0079                     i1l822:
  1102                           
  1103                           ;POSTLAB9.c: 70:          {;POSTLAB9.c: 71:              val_adresh = ADRESH;
  1104  0079  081E               	movf	30,w	;volatile
  1105  007A  00F0               	movwf	??_isr
  1106  007B  0870               	movf	??_isr,w
  1107  007C  00F8               	movwf	_val_adresh
  1108  007D                     i1l824:
  1109                           
  1110                           ;POSTLAB9.c: 77:          PIR1bits.ADIF = 0;
  1111  007D  130C               	bcf	12,6	;volatile
  1112                           
  1113                           ;POSTLAB9.c: 78:     }
  1114  007E  28AC               	goto	i1l70
  1115  007F                     i1l59:	
  1116                           ;POSTLAB9.c: 79:     else if(INTCONbits.T0IF)
  1117                           
  1118  007F  1D0B               	btfss	11,2	;volatile
  1119  0080  2882               	goto	u18_21
  1120  0081  2883               	goto	u18_20
  1121  0082                     u18_21:
  1122  0082  28AC               	goto	i1l70
  1123  0083                     u18_20:
  1124  0083                     i1l826:
  1125                           
  1126                           ;POSTLAB9.c: 80:     {;POSTLAB9.c: 81:          INTCONbits.T0IF = 0;
  1127  0083  110B               	bcf	11,2	;volatile
  1128  0084                     i1l828:
  1129                           
  1130                           ;POSTLAB9.c: 82:          TMR0 = 56;
  1131  0084  3038               	movlw	56
  1132  0085  0081               	movwf	1	;volatile
  1133  0086                     i1l830:
  1134                           
  1135                           ;POSTLAB9.c: 84:          msegundos = msegundos+1;
  1136  0086  0875               	movf	_msegundos,w
  1137  0087  3E01               	addlw	1
  1138  0088  00F5               	movwf	_msegundos
  1139  0089  0876               	movf	_msegundos+1,w
  1140  008A  1803               	skipnc
  1141  008B  3E01               	addlw	1
  1142  008C  3E00               	addlw	0
  1143  008D  00F6               	movwf	_msegundos+1
  1144  008E                     i1l832:
  1145                           
  1146                           ;POSTLAB9.c: 86:          if(msegundos == 26)
  1147  008E  301A               	movlw	26
  1148  008F  0675               	xorwf	_msegundos,w
  1149  0090  0476               	iorwf	_msegundos+1,w
  1150  0091  1D03               	btfss	3,2
  1151  0092  2894               	goto	u19_21
  1152  0093  2895               	goto	u19_20
  1153  0094                     u19_21:
  1154  0094  2897               	goto	i1l836
  1155  0095                     u19_20:
  1156  0095                     i1l834:
  1157                           
  1158                           ;POSTLAB9.c: 87:          {;POSTLAB9.c: 88:              msegundos = 0;
  1159  0095  01F5               	clrf	_msegundos
  1160  0096  01F6               	clrf	_msegundos+1
  1161  0097                     i1l836:
  1162                           
  1163                           ;POSTLAB9.c: 91:          if(msegundos < val_adreshp)
  1164  0097  0876               	movf	_msegundos+1,w
  1165  0098  3A80               	xorlw	128
  1166  0099  00F0               	movwf	??_isr
  1167  009A  3080               	movlw	128
  1168  009B  0270               	subwf	??_isr,w
  1169  009C  1D03               	skipz
  1170  009D  28A0               	goto	u20_25
  1171  009E  0877               	movf	_val_adreshp,w
  1172  009F  0275               	subwf	_msegundos,w
  1173  00A0                     u20_25:
  1174  00A0  1803               	skipnc
  1175  00A1  28A3               	goto	u20_21
  1176  00A2  28A4               	goto	u20_20
  1177  00A3                     u20_21:
  1178  00A3  28A9               	goto	i1l840
  1179  00A4                     u20_20:
  1180  00A4                     i1l838:
  1181                           
  1182                           ;POSTLAB9.c: 92:          {;POSTLAB9.c: 93:              PORTD = 0b01;
  1183  00A4  3001               	movlw	1
  1184  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1185  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1186  00A7  0088               	movwf	8	;volatile
  1187                           
  1188                           ;POSTLAB9.c: 94:          }
  1189  00A8  28AC               	goto	i1l70
  1190  00A9                     i1l840:
  1191                           
  1192                           ;POSTLAB9.c: 96:          {;POSTLAB9.c: 97:              PORTD = 0b0;
  1193  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1194  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1195  00AB  0188               	clrf	8	;volatile
  1196  00AC                     i1l70:
  1197  00AC  0873               	movf	??_isr+3,w
  1198  00AD  008A               	movwf	10
  1199  00AE  0E72               	swapf	??_isr+2,w
  1200  00AF  0083               	movwf	3
  1201  00B0  0EFE               	swapf	btemp,f
  1202  00B1  0E7E               	swapf	btemp,w
  1203  00B2  0009               	retfie
  1204  00B3                     __end_of_isr:
  1205  007E                     btemp	set	126	;btemp
  1206  007E                     wtemp0	set	126
  1207                           
  1208                           	psect	intentry
  1209  0004                     __pintentry:	
  1210                           ;incstack = 0
  1211                           ; Regs used in _isr: [wreg+status,2+status,0]
  1212                           
  1213  0004                     interrupt_function:
  1214  007E                     saved_w	set	btemp
  1215  0004  00FE               	movwf	btemp
  1216  0005  0E03               	swapf	3,w
  1217  0006  00F2               	movwf	??_isr+2
  1218  0007  080A               	movf	10,w
  1219  0008  00F3               	movwf	??_isr+3
  1220  0009  120A  118A  2817   	ljmp	_isr
  1221                           
  1222                           	psect	config
  1223                           
  1224                           ;Config register CONFIG1 @ 0x2007
  1225                           ;	Oscillator Selection bits
  1226                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1227                           ;	Watchdog Timer Enable bit
  1228                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1229                           ;	Power-up Timer Enable bit
  1230                           ;	PWRTE = OFF, PWRT disabled
  1231                           ;	RE3/MCLR pin function select bit
  1232                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1233                           ;	Code Protection bit
  1234                           ;	CP = OFF, Program memory code protection is disabled
  1235                           ;	Data Code Protection bit
  1236                           ;	CPD = OFF, Data memory code protection is disabled
  1237                           ;	Brown Out Reset Selection bits
  1238                           ;	BOREN = OFF, BOR disabled
  1239                           ;	Internal External Switchover bit
  1240                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1241                           ;	Fail-Safe Clock Monitor Enabled bit
  1242                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1243                           ;	Low Voltage Programming Enable bit
  1244                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1245                           ;	In-Circuit Debugger Mode bit
  1246                           ;	DEBUG = 0x1, unprogrammed default
  1247  2007                     	org	8199
  1248  2007  20D4               	dw	8404
  1249                           
  1250                           ;Config register CONFIG2 @ 0x2008
  1251                           ;	Brown-out Reset Selection bit
  1252                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1253                           ;	Flash Program Memory Self Write Enable bits
  1254                           ;	WRT = OFF, Write protection off
  1255  2008                     	org	8200
  1256  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     11      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _main->_setup

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     625
                                              8 BANK0      3     3      0
                            ___awdiv
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      14       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      14      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 14 12:52:44 2021

                     l90 017A                       l87 015F                       u10 0163  
                     u11 0162             ___awdiv@sign 0025                      l329 011B  
                    l700 0138                      l710 0145                      l702 013C  
                    l720 0153                      l712 0147                      l704 013D  
                    l730 015C                      l722 0155                      l714 014B  
                    l706 0141                      l740 0168                      l732 015E  
                    l724 0159                      l716 014F                      l708 0144  
                    l750 016D                      l742 0169                      l734 0163  
                    l726 015A                      l718 0151                      l760 0178  
                    l752 0172                      l744 016A                      l736 0164  
                    l728 015B                      l762 0179                      l754 0173  
                    l746 016B                      l738 0167                      l690 012E  
                    l682 011C                      l940 00BF                      l756 0176  
                    l748 016C                      l692 012F                      l684 0120  
                    l950 00D0                      l942 00C1                      l934 00B3  
                    l758 0177                      l694 0130                      l686 0121  
                    l960 00E8                      l952 00D6                      l944 00C5  
                    l936 00B6                      l696 0131                      l688 012A  
                    l962 00F9                      l954 00D9                      l970 010D  
                    l946 00CA                      l938 00BA                      l698 0132  
                    l972 0112                      l964 00FF                      l956 00E0  
                    l948 00CE                      l980 0180                      l974 0117  
                    l966 0100                      l958 00E4                      l990 019E  
                    l982 0183                      l968 0107                      l992 01A3  
                    l984 0187                      l994 01AC                      l986 0190  
                    l978 017B                      l996 01B0                      l988 0195  
                    l998 01B7                      u400 00C5                      u401 00C4  
                    u410 00D6                      u411 00D5                      u500 0190  
                    u501 018F                      u430 00E8                      u510 019E  
                    _PR2 0092                      u431 00E7                      u511 019D  
                    u520 01AC                      u425 00DA                      u521 01AB  
                    u450 00F9                      u451 00F8                      u445 00E9  
                    u470 010D                      u390 00BA                      u471 010C  
                    u455 00F5                      u391 00B9                      u480 0112  
                    u481 0111                      u465 0101                      u537 01B4  
                    u490 0187                      u547 013F                      u491 0186  
                    _isr 0017                     l1000 01BA                     ?_isr 0070  
                   i1l70 00AC                     i1l59 007F                     _TMR0 0001  
                   _main 017B                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 011C  
                  _ANSEL 0188          ___awdiv@divisor 0020                    i1l810 0017  
                  i1l820 0070                    i1l812 001D                    i1l830 0086  
                  i1l822 0079                    i1l814 0026                    i1l840 00A9  
                  i1l832 008E                    i1l824 007D                    i1l816 0047  
                  i1l834 0095                    i1l826 0083                    i1l818 0050  
                  i1l836 0097                    i1l828 0084                    i1l838 00A4  
        ___awdiv@counter 0024                    u20_20 00A4                    u12_20 001D  
                  u20_21 00A3                    u12_21 001C                    u20_25 00A0  
                  u13_20 0026                    u13_21 0025                    u14_25 0039  
                  u15_20 0050                    u15_21 004F                    u16_25 0062  
                  u17_20 0079                    u17_21 0078                    u18_20 0083  
                  u18_21 0082                    u19_20 0095                    u19_21 0094  
                  _PORTD 0008                    _PORTE 0009                    _TRISD 0088  
                  _TRISE 0089                    _setup 011C                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 01D4                   ??_main 0028                   _ADRESH 001E  
                 _CCPR1L 0015                   _CCPR2L 001B         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                ??___awdiv 0074  
       ___awdiv@quotient 0026                   saved_w 007E  __end_of__initialization 0013  
         __pcstackCOMMON 0070            __end_of_setup 017B           _OPTION_REGbits 0081  
                ??_setup 0074               __pmaintext 017B               __pintentry 0004  
                ___awdiv 00B3                  __ptext1 011C                  __ptext2 00B3  
                __ptext3 0017                _T2CONbits 0012             __size_of_isr 009C  
   end_of_initialization 0013               _val_adresh 0078                _TRISCbits 0087  
            _CCP1CONbits 0017              _CCP2CONbits 001D      start_initialization 000F  
            __end_of_isr 00B3              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0020           __size_of_setup 005F  
      interrupt_function 0004                 _PIE1bits 008C                _msegundos 0075  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of___awdiv 0069            __size_of_main 0059               _INTCONbits 000B  
            _val_adreshp 0077                 intlevel1 0000               _OSCCONbits 008F  
